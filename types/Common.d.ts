import * as React from 'react';
import type { optionClickedProps } from './components/App';
import type { D2CItem, D2CS } from './types';
export declare const head: (items: D2CItem[]) => D2CItem | undefined;
export declare const neck: (items: D2CItem[]) => D2CItem | undefined;
export declare const torso: (items: D2CItem[]) => D2CItem | undefined;
export declare const right_hand: (items: D2CItem[]) => D2CItem | undefined;
export declare const left_hand: (items: D2CItem[]) => D2CItem | undefined;
export declare const right_finger: (items: D2CItem[]) => D2CItem | undefined;
export declare const left_finger: (items: D2CItem[]) => D2CItem | undefined;
export declare const waist: (items: D2CItem[]) => D2CItem | undefined;
export declare const feet: (items: D2CItem[]) => D2CItem | undefined;
export declare const hands: (items: D2CItem[]) => D2CItem | undefined;
export declare const alt_right_hand: (items: D2CItem[]) => D2CItem | undefined;
export declare const alt_left_hand: (items: D2CItem[]) => D2CItem | undefined;
export declare const equipped: (saveData: D2CS) => D2CItem[];
export declare const belt: (saveData: D2CS) => D2CItem[];
export declare const inventory: (saveData: D2CS) => D2CItem[];
export declare const stash: (saveData: D2CS) => D2CItem[];
export declare const cube: (saveData: D2CS) => D2CItem[];
export declare const mercenary: (saveData: D2CS) => D2CItem[];
declare type RCMenuArguments = {
    optionClicked: (event: optionClickedProps) => void;
};
export declare const RCItemMenuId = "RCMENU";
export declare const RCItemMenu: ({ optionClicked }: RCMenuArguments) => JSX.Element;
export declare const RCGridMenuId = "PMENU";
export declare const RCGridMenu: ({ optionClicked }: RCMenuArguments) => JSX.Element;
export declare type EquipDrop = ($event: React.DragEvent, ref: React.RefObject<HTMLDivElement>, position: number) => void;
export declare type EquipDragOver = ($event: React.DragEvent) => boolean;
export declare type EquipDragEnter = ($event: React.DragEvent, ref: React.RefObject<HTMLDivElement>, position: number) => void;
export declare type EquipDragLeave = ($event: React.DragEvent, ref: React.RefObject<HTMLDivElement>) => void;
export declare type EquipOnSelect = (item: D2CItem) => void;
export declare type EquippedItemArguments = {
    id: string;
    className: string;
    position: number;
    selectEvent: EquipOnSelect;
    item?: D2CItem;
    drop?: EquipDrop;
    dragover?: EquipDragOver;
    dragenter?: EquipDragEnter;
    dragleave?: EquipDragLeave;
};
export declare const EquippedItem: ({ id, className, item, position, drop, dragover, dragenter, dragleave, selectEvent }: EquippedItemArguments) => JSX.Element;
export {};
